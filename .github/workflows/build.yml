name: "Build APK"

on:
  push:
    branches: ["main"]

env:
  ANDROID_HOME: "/usr/local/lib/android/sdk"
  ANDROID_NDK_HOME: "${{ env.ANDROID_HOME }}/ndk/25.2.9519653"

jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v4"

      - name: "Set up Python 3.9"
        uses: "actions/setup-python@v4"
        with:
          python-version: "3.9"

      - name: "Install system dependencies"
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            python3-dev build-essential openjdk-17-jdk \
            zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev \
            libssl-dev libsqlite3-dev libreadline-dev libffi-dev \
            libbz2-dev unzip zip wget git cmake
          sudo update-java-alternatives --set java-1.17.0-openjdk-amd64
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV

      - name: "Set up Android SDK"
        run: |
          mkdir -p "$ANDROID_HOME"
          cd "$ANDROID_HOME"
          wget -q "https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip"
          unzip -q "commandlinetools-linux-"*.zip
          rm "commandlinetools-linux-"*.zip
          mkdir -p "cmdline-tools/latest"
          mv cmdline-tools/* "cmdline-tools/latest/" || true
          mv lib/ "cmdline-tools/latest/" || true
          mv bin/ "cmdline-tools/latest/" || true
          mv NOTICE.txt "cmdline-tools/latest/" || true
          mv source.properties "cmdline-tools/latest/" || true
          echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/34.0.0" >> $GITHUB_PATH

      - name: "Install Android components"
        run: |
          mkdir -p "$HOME/.android"
          touch "$HOME/.android/repositories.cfg"
          yes | "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --licenses >/dev/null
          "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" \
            "platform-tools" \
            "build-tools;34.0.0" \
            "platforms;android-34" \
            "cmake;3.22.1" \
            "ndk;25.2.9519653"

      - name: "Install Buildozer"
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir \
            cython==0.29.36 \
            buildozer \
            python-for-android

      - name: "Create buildozer.spec"
        run: |
          cat > buildozer.spec << 'EOF'
[app]
title = MyApp
package.name = myapp
package.domain = org.test
source.dir = .
source.include_exts = py,png,jpg,kv,atlas
version = 0.1
requirements = python3,kivy
orientation = portrait
fullscreen = 0

[buildozer]
log_level = 2
warn_on_root = 1

[android]
android.ndk_path = $ANDROID_NDK_HOME
android.sdk_path = $ANDROID_HOME
android.build_tools_version = 34.0.0
android.api = 34
android.minapi = 21
android.ndk_api = 21
android.arch = arm64-v8a
android.permissions = INTERNET
EOF
          sed -i "s|\$ANDROID_NDK_HOME|$ANDROID_NDK_HOME|g" buildozer.spec
          sed -i "s|\$ANDROID_HOME|$ANDROID_HOME|g" buildozer.spec
          echo "=== Final buildozer.spec ==="
          cat buildozer.spec

      - name: "Build APK"
        run: |
          export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/34.0.0"
          buildozer -v android debug 2>&1 | tee build.log
          if [ ! -f bin/*.apk ]; then
            echo "❌ Build failed - check build.log"
            exit 1
          fi
          echo "✅ Build successful"
          ls -lh bin/*.apk

      - name: "Upload APK"
        uses: "actions/upload-artifact@v4"
        with:
          name: "app-release"
          path: "bin/*.apk"
          if-no-files-found: "error"
          retention-days: 7

      - name: "Upload logs"
        uses: "actions/upload-artifact@v4"
        if: ${{ always() }}
        with:
          name: "build-logs"
          path: |
            build.log
            .buildozer/android/platform/build-*/dists/*/build/outputs/apk/debug/*.log
          retention-days: 7
